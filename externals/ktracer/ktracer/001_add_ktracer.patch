--- accel/tcg/cpu-exec.c	2019-04-24 02:14:45.000000000 +0800
+++ accel/tcg/cpu-exec.c	2019-10-25 15:32:26.010783820 +0800
@@ -16,6 +16,9 @@
  * You should have received a copy of the GNU Lesser General Public
  * License along with this library; if not, see <http://www.gnu.org/licenses/>.
  */
+#include <stdio.h>
+#include <stdlib.h>
+#include <inttypes.h>
 #include "qemu/osdep.h"
 #include "cpu.h"
 #include "trace.h"
@@ -29,12 +32,14 @@
 #include "exec/tb-hash.h"
 #include "exec/tb-lookup.h"
 #include "exec/log.h"
+#include "exec/address-spaces.h"
 #include "qemu/main-loop.h"
 #if defined(TARGET_I386) && !defined(CONFIG_USER_ONLY)
 #include "hw/i386/apic.h"
 #endif
 #include "sysemu/cpus.h"
 #include "sysemu/replay.h"
+#include "ktracer.h"
 
 /* -icount align implementation. */
 
@@ -54,6 +59,8 @@
 #define MAX_DELAY_PRINT_RATE 2000000000LL
 #define MAX_NB_PRINTS 100
 
+bool panda_please_flush_tb = true;
+
 static void align_clocks(SyncClocks *sc, const CPUState *cpu)
 {
     int64_t cpu_icount;
@@ -168,6 +175,7 @@
 #endif /* DEBUG_DISAS */
 
     cpu->can_do_io = !use_icount;
+    before_block_exec(cpu, itb);
     ret = tcg_qemu_tb_exec(env, tb_ptr);
     cpu->can_do_io = 1;
     last_tb = (TranslationBlock *)(ret & ~TB_EXIT_MASK);
@@ -725,6 +733,11 @@
                 cpu->cflags_next_tb = -1;
             }
 
+            if (panda_please_flush_tb) {
+                tb_flush(first_cpu);
+                panda_please_flush_tb = false;
+            }
+
             tb = tb_find(cpu, last_tb, tb_exit, cflags);
             cpu_loop_exec_tb(cpu, tb, &last_tb, &tb_exit);
             /* Try to align the host and virtual clocks
@@ -738,3 +751,4 @@
 
     return ret;
 }
+
